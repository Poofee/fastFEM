INCLUDEPATH += $$PWD

HEADERS += \
    $$PWD/approximationError.h \
    $$PWD/BasisFactory.h \
    $$PWD/BergotBasis.h \
    $$PWD/bezierBasis.h \
    $$PWD/cartesian.h \
    $$PWD/CondNumBasis.h \
    $$PWD/ConjugateGradients.h \
    $$PWD/decasteljau.h \
    $$PWD/discreteFrechetDistance.h \
    $$PWD/ElementType.h \
    $$PWD/fullMatrix.h \
    $$PWD/FuncSpaceData.h \
    $$PWD/GaussIntegration.h \
    $$PWD/GaussJacobi1D.h \
    $$PWD/GaussLegendre1D.h \
    $$PWD/hausdorffDistance.h \
    $$PWD/HilbertCurve.h \
    $$PWD/incompleteBasis.h \
    $$PWD/InnerVertexPlacement.h \
    $$PWD/Iso.h \
    $$PWD/JacobianBasis.h \
    $$PWD/mathEvaluator.h \
    $$PWD/miniBasis.h \
    $$PWD/nanoflann.hpp \
    $$PWD/nodalBasis.h \
    $$PWD/Numeric.h \
    $$PWD/orthogonalBasis.h \
    $$PWD/pointsGenerators.h \
    $$PWD/polynomialBasis.h \
    $$PWD/pyramidalBasis.h \
    $$PWD/robustPredicates.h \
    $$PWD/simpleFunction.h \
    $$PWD/simpleFunctionPython.h \

SOURCES += \
    $$PWD/approximationError.cpp \
    $$PWD/BasisFactory.cpp \
    $$PWD/BergotBasis.cpp \
    $$PWD/bezierBasis.cpp \
    $$PWD/CondNumBasis.cpp \
    $$PWD/ConjugateGradients.cpp \
    $$PWD/decasteljau.cpp \
    $$PWD/discreteFrechetDistance.cpp \
    $$PWD/ElementType.cpp \
    $$PWD/fullMatrix.cpp \
    $$PWD/FuncSpaceData.cpp \
    $$PWD/GaussIntegration.cpp \
    $$PWD/GaussJacobi1D.cpp \
    $$PWD/GaussLegendreSimplex.cpp \
    $$PWD/GaussQuadratureHex.cpp \
    $$PWD/GaussQuadratureLin.cpp \
    $$PWD/GaussQuadraturePri.cpp \
    $$PWD/GaussQuadraturePyr.cpp \
    $$PWD/GaussQuadratureQuad.cpp \
    $$PWD/GaussQuadratureTet.cpp \
    $$PWD/GaussQuadratureTri.cpp \
    $$PWD/hausdorffDistance.cpp \
    $$PWD/HilbertCurve.cpp \
    $$PWD/incompleteBasis.cpp \
    $$PWD/InnerVertexPlacement.cpp \
    $$PWD/Iso.cpp \
    $$PWD/JacobianBasis.cpp \
    $$PWD/mathEvaluator.cpp \
    $$PWD/miniBasis.cpp \
    $$PWD/nodalBasis.cpp \
    $$PWD/Numeric.cpp \
    $$PWD/orthogonalBasis.cpp \
    $$PWD/pointsGenerators.cpp \
    $$PWD/polynomialBasis.cpp \
    $$PWD/pyramidalBasis.cpp \
    $$PWD/robustPredicates.cpp \
