INCLUDEPATH += $$PWD

HEADERS += \
    $$PWD/BackgroundMesh.h \
    $$PWD/BackgroundMeshTools.h \
    $$PWD/BDS.h \
    $$PWD/BoundaryLayers.h \
    $$PWD/delaunay3d.h \
    $$PWD/DivideAndConquer.h \
    $$PWD/Field.h \
    $$PWD/FieldPython.h \
    $$PWD/filterElements.h \
    $$PWD/Generator.h \
    $$PWD/HighOrder.h \
    $$PWD/meshGEdge.h \
    $$PWD/meshGFace.h \
    $$PWD/meshGFaceBamg.h \
    $$PWD/meshGFaceBDS.h \
    $$PWD/meshGFaceDelaunayInsertion.h \
    $$PWD/meshGFaceOptimize.h \
    $$PWD/meshGRegion.h \
    $$PWD/meshGRegionBoundaryRecovery.h \
    $$PWD/meshGRegionDelaunayInsertion.h \
    $$PWD/meshGRegionHxt.h \
    $$PWD/meshGRegionLocalMeshMod.h \
    $$PWD/meshGRegionMMG3D.h \
    $$PWD/meshGRegionNetgen.h \
    $$PWD/meshMetric.h \
    $$PWD/meshPartition.h \
    $$PWD/meshRelocateVertex.h \
    $$PWD/qualityMeasures.h \
    $$PWD/qualityMeasuresJacobian.h \
    $$PWD/tetgenBR.h \

SOURCES += \
    $$PWD/BackgroundMesh.cpp \
    $$PWD/BackgroundMeshTools.cpp \
    $$PWD/BDS.cpp \
    $$PWD/BoundaryLayers.cpp \
    $$PWD/delaunay3d.cpp \
    $$PWD/DivideAndConquer.cpp \
    $$PWD/Field.cpp \
    $$PWD/filterElements.cpp \
    $$PWD/Generator.cpp \
    $$PWD/HighOrder.cpp \
    $$PWD/meshGEdge.cpp \
    $$PWD/meshGEdgeExtruded.cpp \
    $$PWD/meshGFace.cpp \
    $$PWD/meshGFaceBamg.cpp \
    $$PWD/meshGFaceBDS.cpp \
    $$PWD/meshGFaceDelaunayInsertion.cpp \
    $$PWD/meshGFaceExtruded.cpp \
    $$PWD/meshGFaceOptimize.cpp \
    $$PWD/meshGFaceTransfinite.cpp \
    $$PWD/meshGRegion.cpp \
    $$PWD/meshGRegionBoundaryLayer.cpp \
    $$PWD/meshGRegionBoundaryRecovery.cpp \
    $$PWD/meshGRegionCarveHole.cpp \
    $$PWD/meshGRegionDelaunayInsertion.cpp \
    $$PWD/meshGRegionExtruded.cpp \
    $$PWD/meshGRegionHxt.cpp \
    $$PWD/meshGRegionLocalMeshMod.cpp \
    $$PWD/meshGRegionMMG3D.cpp \
    $$PWD/meshGRegionNetgen.cpp \
    $$PWD/meshGRegionTransfinite.cpp \
    $$PWD/meshMetric.cpp \
    $$PWD/meshPartition.cpp \
    $$PWD/meshRefine.cpp \
    $$PWD/meshRelocateVertex.cpp \
    $$PWD/qualityMeasures.cpp \
    $$PWD/qualityMeasuresJacobian.cpp \
    $$PWD/tetgenBR.cxx \
